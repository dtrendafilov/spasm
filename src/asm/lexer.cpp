/* Generated by re2c 0.13.2 on Mon Jun  9 11:08:08 2008 */
#line 1 "lexer.re"
#include <iostream>

#include "lexer.hpp"

#include "token.hpp"

namespace SpasmImpl
{
	//! Namespace for all lexical analisys classes
	namespace Lexer
	{
		namespace ASM
		{

			Lexer::Lexer (std::istream & _file)
				: file (&_file), buffer_size (4096)
			{
				buffer = new char[buffer_size];
				cursor = limit = marker = token_start = NULL;
			}

			Lexer::~Lexer ()
			{
				delete [] buffer;
			}

			bool Lexer::tokenize (TokenStream &ts)
			{
				size_t lineno = 0;

				buffer_init ();

				while (1)

#line 38 "<stdout>"
				{
					char yych;

					if ((limit - cursor) < 8) read(8);
					yych = *cursor;
					switch (yych) {
					case 0x00:	goto yy28;
					case 0x09:
					case ' ':	goto yy24;
					case 0x0A:	goto yy26;
					case '%':	goto yy17;
					case '*':	goto yy13;
					case '+':	goto yy11;
					case '-':	goto yy2;
					case '/':	goto yy15;
					case '0':	goto yy4;
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':	goto yy6;
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'e':
					case 'f':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'm':
					case 'n':
					case 'o':
					case 'q':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy23;
					case 'c':	goto yy20;
					case 'd':	goto yy9;
					case 'g':	goto yy19;
					case 'l':	goto yy21;
					case 'p':	goto yy7;
					case 'r':	goto yy10;
					case 's':	goto yy22;
					default:	goto yy30;
					}
yy2:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':	goto yy95;
					default:	goto yy3;
					}
yy3:
#line 108 "lexer.re"
					{
				ts.push_token (Token (Token::minus, lineno));
				token_start = cursor;

				continue;
			}
#line 133 "<stdout>"
yy4:
					yych = *(marker = ++cursor);
					switch (yych) {
					case 'X':
					case 'x':	goto yy90;
					default:	goto yy5;
					}
yy5:
#line 50 "lexer.re"
					{
				ts.push_token (Token (Token::integer, lineno,
				token_start, cursor));
				token_start = cursor;

				continue;
			}
#line 150 "<stdout>"
yy6:
					yych = *++cursor;
					goto yy89;
yy7:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'p':
					case 'q':
					case 's':
					case 't':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'o':	goto yy76;
					case 'r':	goto yy77;
					case 'u':	goto yy78;
					default:	goto yy8;
					}
yy8:
#line 217 "lexer.re"
					{
				return false;
			}
#line 227 "<stdout>"
yy9:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'u':	goto yy73;
					default:	goto yy8;
					}
yy10:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'e':	goto yy67;
					default:	goto yy8;
					}
yy11:
					++cursor;
#line 101 "lexer.re"
					{
				ts.push_token (Token (Token::plus, lineno));
				token_start = cursor;

				continue;
			}
#line 373 "<stdout>"
yy13:
					++cursor;
#line 115 "lexer.re"
					{
				ts.push_token (Token (Token::multiply, lineno));
				token_start = cursor;

				continue;
			}
#line 383 "<stdout>"
yy15:
					++cursor;
#line 122 "lexer.re"
					{
				ts.push_token (Token (Token::divide, lineno));
				token_start = cursor;

				continue;
			}
#line 393 "<stdout>"
yy17:
					++cursor;
#line 129 "lexer.re"
					{
				ts.push_token (Token (Token::modulus, lineno));
				token_start = cursor;

				continue;
			}
#line 403 "<stdout>"
yy19:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'o':	goto yy54;
					default:	goto yy8;
					}
yy20:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'a':	goto yy50;
					default:	goto yy8;
					}
yy21:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'a':	goto yy41;
					case 'o':	goto yy42;
					default:	goto yy8;
					}
yy22:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 't':	goto yy36;
					default:	goto yy8;
					}
yy23:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy8;
					}
yy24:
					++cursor;
					yych = *cursor;
					goto yy32;
yy25:
#line 200 "lexer.re"
					{
				token_start = cursor;

				continue;
			}
#line 755 "<stdout>"
yy26:
					++cursor;
#line 206 "lexer.re"
					{
				++lineno;
				token_start = cursor;

				continue;
			}
#line 765 "<stdout>"
yy28:
					++cursor;
#line 213 "lexer.re"
					{
				break;
			}
#line 772 "<stdout>"
yy30:
					yych = *++cursor;
					goto yy8;
yy31:
					++cursor;
					if (limit == cursor) read(1);
					yych = *cursor;
yy32:
					switch (yych) {
					case 0x09:
					case ' ':	goto yy31;
					default:	goto yy25;
					}
yy33:
					++cursor;
					if (limit == cursor) read(1);
					yych = *cursor;
yy34:
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy35;
					}
yy35:
#line 192 "lexer.re"
					{
				ts.push_token (Token (Token::ident, lineno, token_start,
							cursor));
				token_start = cursor;

				continue;
			}
#line 866 "<stdout>"
yy36:
					yych = *++cursor;
					switch (yych) {
					case 'o':	goto yy37;
					default:	goto yy34;
					}
yy37:
					yych = *++cursor;
					switch (yych) {
					case 'r':	goto yy38;
					default:	goto yy34;
					}
yy38:
					yych = *++cursor;
					switch (yych) {
					case 'e':	goto yy39;
					default:	goto yy34;
					}
yy39:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy40;
					}
yy40:
#line 178 "lexer.re"
					{
				ts.push_token (Token (Token::store, lineno));
				token_start = cursor;

				continue;
			}
#line 961 "<stdout>"
yy41:
					yych = *++cursor;
					switch (yych) {
					case 'b':	goto yy46;
					default:	goto yy34;
					}
yy42:
					yych = *++cursor;
					switch (yych) {
					case 'a':	goto yy43;
					default:	goto yy34;
					}
yy43:
					yych = *++cursor;
					switch (yych) {
					case 'd':	goto yy44;
					default:	goto yy34;
					}
yy44:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy45;
					}
yy45:
#line 171 "lexer.re"
					{
				ts.push_token (Token (Token::load, lineno));
				token_start = cursor;

				continue;
			}
#line 1056 "<stdout>"
yy46:
					yych = *++cursor;
					switch (yych) {
					case 'e':	goto yy47;
					default:	goto yy34;
					}
yy47:
					yych = *++cursor;
					switch (yych) {
					case 'l':	goto yy48;
					default:	goto yy34;
					}
yy48:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy49;
					}
yy49:
#line 185 "lexer.re"
					{
				ts.push_token (Token (Token::label, lineno));
				token_start = cursor;

				continue;
			}
#line 1145 "<stdout>"
yy50:
					yych = *++cursor;
					switch (yych) {
					case 'l':	goto yy51;
					default:	goto yy34;
					}
yy51:
					yych = *++cursor;
					switch (yych) {
					case 'l':	goto yy52;
					default:	goto yy34;
					}
yy52:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy53;
					}
yy53:
#line 157 "lexer.re"
					{
				ts.push_token (Token (Token::call, lineno));
				token_start = cursor;

				continue;
			}
#line 1234 "<stdout>"
yy54:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					case 'f':	goto yy57;
					case 't':	goto yy56;
					default:	goto yy55;
					}
yy55:
#line 150 "lexer.re"
					{
				ts.push_token (Token (Token::go, lineno));
				token_start = cursor;

				continue;
			}
#line 1311 "<stdout>"
yy56:
					yych = *++cursor;
					switch (yych) {
					case 'r':	goto yy63;
					default:	goto yy34;
					}
yy57:
					yych = *++cursor;
					switch (yych) {
					case 'a':	goto yy58;
					default:	goto yy34;
					}
yy58:
					yych = *++cursor;
					switch (yych) {
					case 'l':	goto yy59;
					default:	goto yy34;
					}
yy59:
					yych = *++cursor;
					switch (yych) {
					case 's':	goto yy60;
					default:	goto yy34;
					}
yy60:
					yych = *++cursor;
					switch (yych) {
					case 'e':	goto yy61;
					default:	goto yy34;
					}
yy61:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy62;
					}
yy62:
#line 143 "lexer.re"
					{
				ts.push_token (Token (Token::gofalse, lineno));
				token_start = cursor;

				continue;
			}
#line 1418 "<stdout>"
yy63:
					yych = *++cursor;
					switch (yych) {
					case 'u':	goto yy64;
					default:	goto yy34;
					}
yy64:
					yych = *++cursor;
					switch (yych) {
					case 'e':	goto yy65;
					default:	goto yy34;
					}
yy65:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy66;
					}
yy66:
#line 136 "lexer.re"
					{
				ts.push_token (Token (Token::gotrue, lineno));
				token_start = cursor;

				continue;
			}
#line 1507 "<stdout>"
yy67:
					yych = *++cursor;
					switch (yych) {
					case 'a':	goto yy68;
					case 't':	goto yy69;
					default:	goto yy34;
					}
yy68:
					yych = *++cursor;
					switch (yych) {
					case 'd':	goto yy71;
					default:	goto yy34;
					}
yy69:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy70;
					}
yy70:
#line 164 "lexer.re"
					{
				ts.push_token (Token (Token::ret, lineno));
				token_start = cursor;

				continue;
			}
#line 1597 "<stdout>"
yy71:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy72;
					}
yy72:
#line 87 "lexer.re"
					{
				ts.push_token (Token (Token::read, lineno));
				token_start = cursor;

				continue;
			}
#line 1674 "<stdout>"
yy73:
					yych = *++cursor;
					switch (yych) {
					case 'p':	goto yy74;
					default:	goto yy34;
					}
yy74:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy75;
					}
yy75:
#line 80 "lexer.re"
					{
				ts.push_token (Token (Token::dup, lineno));
				token_start = cursor;

				continue;
			}
#line 1757 "<stdout>"
yy76:
					yych = *++cursor;
					switch (yych) {
					case 'p':	goto yy86;
					default:	goto yy34;
					}
yy77:
					yych = *++cursor;
					switch (yych) {
					case 'i':	goto yy82;
					default:	goto yy34;
					}
yy78:
					yych = *++cursor;
					switch (yych) {
					case 's':	goto yy79;
					default:	goto yy34;
					}
yy79:
					yych = *++cursor;
					switch (yych) {
					case 'h':	goto yy80;
					default:	goto yy34;
					}
yy80:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy81;
					}
yy81:
#line 66 "lexer.re"
					{
				ts.push_token (Token (Token::push, lineno));
				token_start = cursor;

				continue;
			}
#line 1858 "<stdout>"
yy82:
					yych = *++cursor;
					switch (yych) {
					case 'n':	goto yy83;
					default:	goto yy34;
					}
yy83:
					yych = *++cursor;
					switch (yych) {
					case 't':	goto yy84;
					default:	goto yy34;
					}
yy84:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy85;
					}
yy85:
#line 94 "lexer.re"
					{
				ts.push_token (Token (Token::print, lineno));
				token_start = cursor;

				continue;
			}
#line 1947 "<stdout>"
yy86:
					++cursor;
					switch ((yych = *cursor)) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'G':
					case 'H':
					case 'I':
					case 'J':
					case 'K':
					case 'L':
					case 'M':
					case 'N':
					case 'O':
					case 'P':
					case 'Q':
					case 'R':
					case 'S':
					case 'T':
					case 'U':
					case 'V':
					case 'W':
					case 'X':
					case 'Y':
					case 'Z':
					case '_':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':
					case 'g':
					case 'h':
					case 'i':
					case 'j':
					case 'k':
					case 'l':
					case 'm':
					case 'n':
					case 'o':
					case 'p':
					case 'q':
					case 'r':
					case 's':
					case 't':
					case 'u':
					case 'v':
					case 'w':
					case 'x':
					case 'y':
					case 'z':	goto yy33;
					default:	goto yy87;
					}
yy87:
#line 73 "lexer.re"
					{
				ts.push_token (Token (Token::pop, lineno));
				token_start = cursor;

				continue;
			}
#line 2024 "<stdout>"
yy88:
					++cursor;
					if (limit == cursor) read(1);
					yych = *cursor;
yy89:
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':	goto yy88;
					default:	goto yy5;
					}
yy90:
					yych = *++cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':	goto yy92;
					default:	goto yy91;
					}
yy91:
					cursor = marker;
					goto yy5;
yy92:
					++cursor;
					if (limit == cursor) read(1);
					yych = *cursor;
					switch (yych) {
					case '0':
					case '1':
					case '2':
					case '3':
					case '4':
					case '5':
					case '6':
					case '7':
					case '8':
					case '9':
					case 'A':
					case 'B':
					case 'C':
					case 'D':
					case 'E':
					case 'F':
					case 'a':
					case 'b':
					case 'c':
					case 'd':
					case 'e':
					case 'f':	goto yy92;
					default:	goto yy94;
					}
yy94:
#line 58 "lexer.re"
					{
				ts.push_token (Token (Token::xinteger, lineno,
				token_start, cursor));
				token_start = cursor;

				continue;
			}
#line 2111 "<stdout>"
yy95:
					++cursor;
					yych = *cursor;
					goto yy5;
				}
#line 221 "lexer.re"

				return true;
			}

			/*!
			** Fills up the buffer when neccessary.
			** Note the buffer is always filled to the maximum, not just the
			** number of bytes neccessary for the lexer to continue.
			**
			** \param nbytes	- the number of bytes
			*/

			void Lexer::buffer_grow (size_t new_size)
			{
				char *new_buffer = new char[new_size];

				std::copy (buffer, limit, new_buffer);

				token_start = new_buffer + (token_start - buffer);
				cursor = new_buffer + (cursor - buffer);
				limit = new_buffer + new_size;

				buffer_size = new_size;

				delete [] buffer;
				buffer = new_buffer;
			}

			void Lexer::read (size_t nbytes)
			{
				if (token_start + nbytes > limit) { // we need larger buffer
					buffer_grow (token_start - buffer + nbytes);
				}

				std::copy (token_start, limit, buffer);
				cursor -= token_start - buffer;
				char *old_limit = limit - (token_start - buffer);
				token_start = buffer;

				file->read (old_limit, limit - old_limit);
				if (file->eof ()) {
					size_t bytes = file->gcount ();
					std::fill (old_limit + bytes, limit, 0);
				}
			}

			void Lexer::buffer_init ()
			{
				file->read (buffer, buffer_size);
				if (file->eof ()) {
					size_t bytes = file->gcount ();
					std::fill (buffer + bytes, buffer + buffer_size, 0);
				}

				cursor = marker = token_start = buffer;
				limit = buffer + buffer_size;
			}


		}	// namespace ASM

	}	// namespace Lexer
}	// namespace SpasmImpl

