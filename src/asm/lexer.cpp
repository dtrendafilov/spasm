/* Generated by re2c 0.13.2 on Sat Mar 15 00:20:33 2008 */
#line 1 "lexer.cc"
#include <iostream>

#include "lexer.hpp"

#include "token.hpp"

namespace SpasmImpl
{
	//! Namespace for all lexical analisys classes
	namespace Lexer
	{

		ASMLexer::ASMLexer (std::istream & _file)
			: file (&_file), buffer_size (4096)
		{
			buffer = new char[buffer_size];
			cursor = limit = marker = token_start = NULL;
		}

		ASMLexer::~ASMLexer ()
		{
			delete [] buffer;
		}

		bool ASMLexer::tokenize (TokenStream &ts)
		{
			size_t lineno = 0;

			buffer_init ();

			while (1)

#line 36 "lexer.cpp"
			{
				char yych;

				if ((limit - cursor) < 8) read(8);
				yych = *cursor;
				switch (yych) {
				case 0x00:	goto yy28;
				case 0x09:
				case ' ':	goto yy24;
				case 0x0A:	goto yy26;
				case '%':	goto yy17;
				case '*':	goto yy13;
				case '+':	goto yy11;
				case '-':	goto yy2;
				case '/':	goto yy15;
				case '0':	goto yy4;
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':	goto yy6;
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'e':
				case 'f':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'm':
				case 'n':
				case 'o':
				case 'q':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy23;
				case 'c':	goto yy20;
				case 'd':	goto yy9;
				case 'g':	goto yy19;
				case 'l':	goto yy21;
				case 'p':	goto yy7;
				case 'r':	goto yy10;
				case 's':	goto yy22;
				default:	goto yy30;
				}
yy2:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':	goto yy95;
				default:	goto yy3;
				}
yy3:
#line 100 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::minus, lineno));
				token_start = cursor;
				continue;
			}
#line 130 "lexer.cpp"
yy4:
				yych = *(marker = ++cursor);
				switch (yych) {
				case 'X':
				case 'x':	goto yy90;
				default:	goto yy5;
				}
yy5:
#line 48 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::integer, lineno, token_start, cursor));
				token_start = cursor;

				continue;
			}
#line 146 "lexer.cpp"
yy6:
				yych = *++cursor;
				goto yy89;
yy7:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'p':
				case 'q':
				case 's':
				case 't':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'o':	goto yy76;
				case 'r':	goto yy77;
				case 'u':	goto yy78;
				default:	goto yy8;
				}
yy8:
#line 194 "lexer.cc"
				{
				return false;
			}
#line 223 "lexer.cpp"
yy9:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'u':	goto yy73;
				default:	goto yy8;
				}
yy10:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'e':	goto yy67;
				default:	goto yy8;
				}
yy11:
				++cursor;
#line 94 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::plus, lineno));
				token_start = cursor;
				continue;
			}
#line 368 "lexer.cpp"
yy13:
				++cursor;
#line 106 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::multiply, lineno));
				token_start = cursor;
				continue;
			}
#line 377 "lexer.cpp"
yy15:
				++cursor;
#line 112 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::divide, lineno));
				token_start = cursor;
				continue;
			}
#line 386 "lexer.cpp"
yy17:
				++cursor;
#line 118 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::modulus, lineno));
				token_start = cursor;
				continue;
			}
#line 395 "lexer.cpp"
yy19:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'o':	goto yy54;
				default:	goto yy8;
				}
yy20:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'a':	goto yy50;
				default:	goto yy8;
				}
yy21:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'a':	goto yy41;
				case 'o':	goto yy42;
				default:	goto yy8;
				}
yy22:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 't':	goto yy36;
				default:	goto yy8;
				}
yy23:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy8;
				}
yy24:
				++cursor;
				yych = *cursor;
				goto yy32;
yy25:
#line 178 "lexer.cc"
				{
				token_start = cursor;
				continue;
			}
#line 746 "lexer.cpp"
yy26:
				++cursor;
#line 183 "lexer.cc"
				{
				++lineno;
				token_start = cursor;

				continue;
			}
#line 756 "lexer.cpp"
yy28:
				++cursor;
#line 190 "lexer.cc"
				{
				break;
			}
#line 763 "lexer.cpp"
yy30:
				yych = *++cursor;
				goto yy8;
yy31:
				++cursor;
				if (limit == cursor) read(1);
				yych = *cursor;
yy32:
				switch (yych) {
				case 0x09:
				case ' ':	goto yy31;
				default:	goto yy25;
				}
yy33:
				++cursor;
				if (limit == cursor) read(1);
				yych = *cursor;
yy34:
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy35;
				}
yy35:
#line 172 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::ident, lineno, token_start, cursor));
				token_start = cursor;
				continue;
			}
#line 855 "lexer.cpp"
yy36:
				yych = *++cursor;
				switch (yych) {
				case 'o':	goto yy37;
				default:	goto yy34;
				}
yy37:
				yych = *++cursor;
				switch (yych) {
				case 'r':	goto yy38;
				default:	goto yy34;
				}
yy38:
				yych = *++cursor;
				switch (yych) {
				case 'e':	goto yy39;
				default:	goto yy34;
				}
yy39:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy40;
				}
yy40:
#line 160 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::store, lineno));
				token_start = cursor;
				continue;
			}
#line 949 "lexer.cpp"
yy41:
				yych = *++cursor;
				switch (yych) {
				case 'b':	goto yy46;
				default:	goto yy34;
				}
yy42:
				yych = *++cursor;
				switch (yych) {
				case 'a':	goto yy43;
				default:	goto yy34;
				}
yy43:
				yych = *++cursor;
				switch (yych) {
				case 'd':	goto yy44;
				default:	goto yy34;
				}
yy44:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy45;
				}
yy45:
#line 154 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::load, lineno));
				token_start = cursor;
				continue;
			}
#line 1043 "lexer.cpp"
yy46:
				yych = *++cursor;
				switch (yych) {
				case 'e':	goto yy47;
				default:	goto yy34;
				}
yy47:
				yych = *++cursor;
				switch (yych) {
				case 'l':	goto yy48;
				default:	goto yy34;
				}
yy48:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy49;
				}
yy49:
#line 166 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::label, lineno));
				token_start = cursor;
				continue;
			}
#line 1131 "lexer.cpp"
yy50:
				yych = *++cursor;
				switch (yych) {
				case 'l':	goto yy51;
				default:	goto yy34;
				}
yy51:
				yych = *++cursor;
				switch (yych) {
				case 'l':	goto yy52;
				default:	goto yy34;
				}
yy52:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy53;
				}
yy53:
#line 142 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::call, lineno));
				token_start = cursor;
				continue;
			}
#line 1219 "lexer.cpp"
yy54:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				case 'f':	goto yy57;
				case 't':	goto yy56;
				default:	goto yy55;
				}
yy55:
#line 136 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::go, lineno));
				token_start = cursor;
				continue;
			}
#line 1295 "lexer.cpp"
yy56:
				yych = *++cursor;
				switch (yych) {
				case 'r':	goto yy63;
				default:	goto yy34;
				}
yy57:
				yych = *++cursor;
				switch (yych) {
				case 'a':	goto yy58;
				default:	goto yy34;
				}
yy58:
				yych = *++cursor;
				switch (yych) {
				case 'l':	goto yy59;
				default:	goto yy34;
				}
yy59:
				yych = *++cursor;
				switch (yych) {
				case 's':	goto yy60;
				default:	goto yy34;
				}
yy60:
				yych = *++cursor;
				switch (yych) {
				case 'e':	goto yy61;
				default:	goto yy34;
				}
yy61:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy62;
				}
yy62:
#line 130 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::gofalse, lineno));
				token_start = cursor;
				continue;
			}
#line 1401 "lexer.cpp"
yy63:
				yych = *++cursor;
				switch (yych) {
				case 'u':	goto yy64;
				default:	goto yy34;
				}
yy64:
				yych = *++cursor;
				switch (yych) {
				case 'e':	goto yy65;
				default:	goto yy34;
				}
yy65:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy66;
				}
yy66:
#line 124 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::gotrue, lineno));
				token_start = cursor;
				continue;
			}
#line 1489 "lexer.cpp"
yy67:
				yych = *++cursor;
				switch (yych) {
				case 'a':	goto yy68;
				case 't':	goto yy69;
				default:	goto yy34;
				}
yy68:
				yych = *++cursor;
				switch (yych) {
				case 'd':	goto yy71;
				default:	goto yy34;
				}
yy69:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy70;
				}
yy70:
#line 148 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::ret, lineno));
				token_start = cursor;
				continue;
			}
#line 1578 "lexer.cpp"
yy71:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy72;
				}
yy72:
#line 82 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::read, lineno));
				token_start = cursor;
				continue;
			}
#line 1654 "lexer.cpp"
yy73:
				yych = *++cursor;
				switch (yych) {
				case 'p':	goto yy74;
				default:	goto yy34;
				}
yy74:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy75;
				}
yy75:
#line 76 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::dup, lineno));
				token_start = cursor;
				continue;
			}
#line 1736 "lexer.cpp"
yy76:
				yych = *++cursor;
				switch (yych) {
				case 'p':	goto yy86;
				default:	goto yy34;
				}
yy77:
				yych = *++cursor;
				switch (yych) {
				case 'i':	goto yy82;
				default:	goto yy34;
				}
yy78:
				yych = *++cursor;
				switch (yych) {
				case 's':	goto yy79;
				default:	goto yy34;
				}
yy79:
				yych = *++cursor;
				switch (yych) {
				case 'h':	goto yy80;
				default:	goto yy34;
				}
yy80:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy81;
				}
yy81:
#line 62 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::push, lineno));

				token_start = cursor;

				continue;
			}
#line 1838 "lexer.cpp"
yy82:
				yych = *++cursor;
				switch (yych) {
				case 'n':	goto yy83;
				default:	goto yy34;
				}
yy83:
				yych = *++cursor;
				switch (yych) {
				case 't':	goto yy84;
				default:	goto yy34;
				}
yy84:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy85;
				}
yy85:
#line 88 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::print, lineno));
				token_start = cursor;
				continue;
			}
#line 1926 "lexer.cpp"
yy86:
				++cursor;
				switch ((yych = *cursor)) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'G':
				case 'H':
				case 'I':
				case 'J':
				case 'K':
				case 'L':
				case 'M':
				case 'N':
				case 'O':
				case 'P':
				case 'Q':
				case 'R':
				case 'S':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case 'Z':
				case '_':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':
				case 'g':
				case 'h':
				case 'i':
				case 'j':
				case 'k':
				case 'l':
				case 'm':
				case 'n':
				case 'o':
				case 'p':
				case 'q':
				case 'r':
				case 's':
				case 't':
				case 'u':
				case 'v':
				case 'w':
				case 'x':
				case 'y':
				case 'z':	goto yy33;
				default:	goto yy87;
				}
yy87:
#line 70 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::pop, lineno));
				token_start = cursor;
				continue;
			}
#line 2002 "lexer.cpp"
yy88:
				++cursor;
				if (limit == cursor) read(1);
				yych = *cursor;
yy89:
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':	goto yy88;
				default:	goto yy5;
				}
yy90:
				yych = *++cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':	goto yy92;
				default:	goto yy91;
				}
yy91:
				cursor = marker;
				goto yy5;
yy92:
				++cursor;
				if (limit == cursor) read(1);
				yych = *cursor;
				switch (yych) {
				case '0':
				case '1':
				case '2':
				case '3':
				case '4':
				case '5':
				case '6':
				case '7':
				case '8':
				case '9':
				case 'A':
				case 'B':
				case 'C':
				case 'D':
				case 'E':
				case 'F':
				case 'a':
				case 'b':
				case 'c':
				case 'd':
				case 'e':
				case 'f':	goto yy92;
				default:	goto yy94;
				}
yy94:
#line 55 "lexer.cc"
				{
				ts.push_token (ASMToken (ASMToken::xinteger, lineno, token_start, cursor));
				token_start = cursor;

				continue;
			}
#line 2088 "lexer.cpp"
yy95:
				++cursor;
				yych = *cursor;
				goto yy5;
			}
#line 198 "lexer.cc"

			return true;
		}

		/*!
		** Fills up the buffer when neccessary.
		** Note the buffer is always filled to the maximum, not just the
		** number of bytes neccessary for the lexer to continue.
		**
		** \param nbytes	- the number of bytes
		*/

		void ASMLexer::buffer_grow (size_t new_size)
		{
			char *new_buffer = new char[new_size];

			std::copy (buffer, limit, new_buffer);

			token_start = new_buffer + (token_start - buffer);
			cursor = new_buffer + (cursor - buffer);
			limit = new_buffer + new_size;

			buffer_size = new_size;

			delete [] buffer;
			buffer = new_buffer;
		}

		void ASMLexer::read (size_t nbytes)
		{
			if (token_start + nbytes > limit) { // we need larger buffer
				buffer_grow (token_start - buffer + nbytes);
			}

			std::copy (token_start, limit, buffer);
			cursor -= token_start - buffer;
			char *old_limit = limit - (token_start - buffer);
			token_start = buffer;

			file->read (old_limit, limit - old_limit);
			if (file->eof ()) {
				size_t bytes = file->gcount ();
				std::fill (old_limit + bytes, limit, 0);
			}
		}

		void ASMLexer::buffer_init ()
		{
			file->read (buffer, buffer_size);
			if (file->eof ()) {
				size_t bytes = file->gcount ();
				std::fill (buffer + bytes, buffer + buffer_size, 0);
			}

			cursor = marker = token_start = buffer;
			limit = buffer + buffer_size;
		}



	}	// namespace Lexer
}	// namespace SpasmImpl

